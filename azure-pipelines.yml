# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
schedules:
- cron: "0 * * * *"
  branches:
    include:
    - master
  displayName: Run Script Every Hour
trigger:
- master

pool:
  vmImage: ubuntu-latest


jobs:
- job: RunScript
  displayName: 'Run Script'
  

  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'



  - script: |
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
  - script: |
      python -m pip install --upgrade pip
      pip install install beautifulsoup4
      pip install pyodbc
      pip install regex
      pip install lxml
      pip install requests
      pip install GitPython

    displayName: 'Install dependencies'
  
  - script: |
      python ssms-scraper.py
    displayName: 'Run ssms-scraper.py'
  - script: |
      python another_script.py
    displayName: 'Run car-make-dealerships.py'

  - script: |
      # Connect to your SQL Server using SSMS or sqlcmd
      
      # Execute the stored procedures using their names
      sqlcmd -S web-development.database.windows.net -d graduates -U Canvas -P Dut950505 -Q "EXEC Create_Clean_Flat_Updated_table"
      sqlcmd -S web-development.database.windows.net -d graduates -U Canvas -P Dut950505 -Q "EXEC CreateDimVehicle"
      sqlcmd -S web-development.database.windows.net -d graduates -U Canvas -P Dut950505 -Q "EXEC SplitDealers_SP"
      sqlcmd -S web-development.database.windows.net -d graduates -U Canvas -P Dut950505 -Q "EXEC Update_DimDealerships"
   







